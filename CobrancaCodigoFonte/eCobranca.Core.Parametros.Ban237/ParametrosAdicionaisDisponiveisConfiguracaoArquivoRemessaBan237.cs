using eCobranca.Atributos;
using eCobranca.Enumerator;
using eCobranca.Factory;
using eCobranca.Util;

namespace eCobranca.Core.Parametros.Ban237;

public class ParametrosAdicionaisDisponiveisConfiguracaoArquivoRemessaBan237 : ParametrosAdicionaisDisponiveisConfiguracaoArquivoRemessa, IParametrosAdicionaisDisponiveisConfiguracaoArquivoRemessaBan237, IParametrosAdicionaisDisponiveisConfiguracaoArquivoRemessa
{
	public ParametrosAdicionaisDisponiveisConfiguracaoArquivoRemessaBan237()
	{
		parametros.AddRange(EnumUtil.GetEnumByAttributeToParametroConfiguracao<EnumParametrosAdicionaisConfiguracao, AtributoChave>(new AtributoChave(EnumModuloParametrizacao.CONFIGURACAO_REMESSA, EnumCodigoBanco.BANCO_BRADESCO)));
	}

	public ParametroConfiguracao GeraRegistroTransacaoTipo1RemessaCnab400()
	{
		return FactoryParametroConfiguracao.CriarParametroConfiguracao(EnumParametrosAdicionaisConfiguracao.REM_GERA_REGISTRO_TRANSACAO_TIPO_1_REMESSA_CNAB400);
	}

	public ParametroConfiguracao GeraRegistroTransacaoTipo2RemessaCnab400()
	{
		return FactoryParametroConfiguracao.CriarParametroConfiguracao(EnumParametrosAdicionaisConfiguracao.REM_GERA_REGISTRO_TRANSACAO_TIPO_2_REMESSA_CNAB400);
	}

	public ParametroConfiguracao GeraRegistroTransacaoTipo3RemessaCnab400()
	{
		return FactoryParametroConfiguracao.CriarParametroConfiguracao(EnumParametrosAdicionaisConfiguracao.REM_GERA_REGISTRO_TRANSACAO_TIPO_3_REMESSA_CNAB400);
	}

	public ParametroConfiguracao GeraRegistroTransacaoTipo7RemessaCnab400()
	{
		return FactoryParametroConfiguracao.CriarParametroConfiguracao(EnumParametrosAdicionaisConfiguracao.REM_GERA_REGISTRO_TRANSACAO_TIPO_7_REMESSA_CNAB400);
	}

	public ParametroConfiguracao ClienteOptaDebitoAutomatico()
	{
		return FactoryParametroConfiguracao.CriarParametroConfiguracao(EnumParametrosAdicionaisConfiguracao.REM_CLIENTE_OPTA_DEBITO_AUTOMATICO);
	}
}
